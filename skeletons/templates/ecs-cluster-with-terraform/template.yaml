apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: ecs-cluster
  title: Deploy an ECS Cluster
  description: Deploy an ECS Cluster using Terraform
  tags:
    - ecs-cluster
    - terraform
    - sonarqube
  annotations:
    github.com/project-slug: ValeryAsah/ecs-cluster-terraform
spec:
  owner: Valery
  type: service
  parameters:
    - title: Provide information about the new component
      required:
        - orgName
        - appName
        - domainName
        - repoBranchName
        - apiPath
        - description
        - environment
      properties:
        orgName:
          title: Organization name
          type: string
          default: axs
        appName:
          title: App name
          type: string
          default: deploy-ecs-cluster-using-terraform
        domainName:
          title: Name of the domain object
          type: string
          default: Person
        repoBranchName:
          title: Name of the branch in the Git repository
          type: string
          default: master
        apiPath:
          title: REST API path
          type: string
          default: /api/v1
        description:
          title: Description
          type: string
          default: Deploy an ECS App Generated by Backstage
        environment:
          title: Environment to deploy into
          description: 'either test, dev, staging, production'
          enum:
            - test
            - dev
            - staging
            - production
          'ui:autofocus': true
          'ui:options':
            rows: 5
    - title: Choose a Repo location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          'ui:field': RepoUrlPicker
          'ui:options':
            allowedHosts:
              - github.com
    - title: Basic ECS Cluster Configuration
      required:
        - region
        - action
      properties:
        region:
          title: AWS Region
          type: string
          description: The AWS region where the cluster will be deployed
          enum:
            - us-west-2
            - eu-west-2
            - eu-west-1
        action:
          title: Action
          type: string
          description: Action to perform (apply/destroy)
          enum:
            - plan
            - apply
            - destroy
  steps:
    - id: fetch-base
      name: Fetch Base
      action: 'fetch:template'
      input:
        url: ./skeleton
        values:
          name: ecs-cluster
    - id: publish
      name: Publishing to the Source Code Repository
      action: 'publish:github'
      input:
        allowedHosts:
          - github.com
        description: '${{ parameters.description }}'
        repoUrl: >-
          github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.appName
          }}
        defaultBranch: '${{ parameters.repoBranchName }}'
        repoVisibility: public
    - id: github-action
      name: Trigger GitHub Action
      action: 'github:actions:dispatch'
      input:
        workflowId: deploy.yml
        repoUrl: '${{ parameters.repoUrl }}'
        branchOrTagName: main
        workflowInputs:
          environment: '${{ parameters.environment }}'
          awsRegion: '${{ parameters.region }}'
          action: '${{ parameters.action }}'
    - id: register
      name: Registering the Catalog Info Component
      action: 'catalog:register'
      input:
        repoContentsUrl: '${{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: /catalog-info.yaml
  output:
    links:
      - title: Open the Source Code Repository
        url: '${{ steps.publish.output.remoteUrl }}'
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: '${{ steps.register.output.entityRef }}'
